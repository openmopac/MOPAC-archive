      SUBROUTINE POWEL1 (A,B,AJINV,X,F,N,E,DSTEP,DMAX,ACC,MAXFUN,IS)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
       INCLUDE 'SIZES.i'
       INCLUDE 'FFILES.i'                                               GDH1095
C
C     GRADIENT NORM MINIMIZATION BY VARIABLE METRIC METHOD
C     REFERENCE :
C     M.J.D POWELL IN NUMERICAL METHODS FOR NONLINEAR ALGEBRAIC
C                     EQUATIONS (P.RABINOWITZ ED.) GORDON.BREACH (1970)
C
C----------------------
C     SIZE   /OPTIM/ ...AJINV(N,N)...A(N,N)...W(5*N)...B(N,N)...VALU(N)
      COMMON /OPTIMI / IPRIN,IMP0                                       DJG0995
      COMMON /OPTMCI / I,J,K,IC,MW,NDC,ND,NF,NX,NT,NW,MAXC,NTEST,       3GL3092
     1                 IDUMMY(19 + 2*NCHAIN - 13)                       3GL3092
      COMMON /OPTMCL / JACOB, LDUMMY(NCHAIN + 3)                        GCL0892
      COMMON /OPTMCR / AJINVM(MAXPAR,MAXPAR),AM(MAXPAR,MAXPAR),         3GL3092
     1                 W(MAXPAR*5),BM(MAXPAR,MAXPAR),VALU(MAXPAR),      3GL3092
     2                 DD,DM,DN,DS,DW,PA,PJ,SP,DSS,DMM,FNP,FSQ,FMIN,    3GL3092
     3                 TINC,DTEST,DMULT,ANMULT,EMIN,                    3GL3092
     4                 RDUMY(MAXHES + MAXPAR*(NCHAIN+10) + NCHAIN + 11) 3GL3092
C     COMMON /OPTIM/ IPRINT,IMP0,LEC,IPRT,AJINVM(MAXPAR,MAXPAR)
C    .              ,AM(MAXPAR,MAXPAR),W(MAXPAR*5),BM(MAXPAR,MAXPAR)
C    .              ,VALU(MAXPAR)
C    .              ,DD,DM,DN,DS,DW,PA,PJ,SP,DSS,DMM,FNP,FSQ,FMIN,TINC
C    .              ,DTEST,DMULT,ANMULT,EMIN
C    .              ,I,J,K,IC,MW,NDC,ND,NF,NX,NT,NW,MAXC,NTEST
C    .              ,JACOB
      COMMON /SCFOK/ FAIL
      COMMON /AREACM/ NOPTI,TAREA,NINTEG
      DIMENSION X(N),F(N)
      DIMENSION A(N,N),B(N,N),AJINV(N,N)
      LOGICAL FAIL,JACOB,TAREA
      LOGICAL LDUMMY                                                    3GL3092
      CHARACTER*8 NEWTON,GRADIE,HYBRID,EXTRA,BLANK,CHEMIN
      SAVE
      DATA NEWTON,   GRADIE,     HYBRID,    EXTRA,     BLANK
     ./  ' NEWTON ','GRADIENT',' HYBRID ',' EXTRA  ','        '/
C     SET VARIOUS PARAMETERS
      CHEMIN=BLANK
      JACOB=.FALSE.
      MAXC=0
C     MAXC IS THE NUMBER OF GRADIENT CALLS
      NT=N+4
      NTEST=NT
C     NT AND NTEST CAUSE AN ERROR RETURN IF F(X) DOES NOT INCREASE
      DTEST=DBLE(N+N)-0.5D0                                             GCL0393
C     DTEST IS USED TO MAINTAIN LINEAR INDEPENDENCE
      NX=N*N
      NF=N
      NW=NF+N
      MW=NW+N
      NDC=MW+N
      ND=NDC+N
C     THESE PARAMETERS SEPARATE THE WORKING SPACE ARRAY W
      FMIN=0.D0
C     USUALLY FMIN IS THE LEAST CALCULATED VALUE OF F(X),
C     AND THE BEST X IS IN W(1) TO W(N)
      DD=0.D0
C     USUALLY DD IS THE SQUARE OF THE CURRENT STEP LENGTH
      DSS=DSTEP*DSTEP
      DM=DMAX*DMAX
      DMM=4.D0*DM
      IS=5
C     IS CONTROLS A GO TO STATEMENT FOLLOWING A GRADIENT CALL
      TINC=1.D0
C     TINC IS USED IN THE CRITERION TO INCREASE THE STEP LENGTH
C     CALL THE SUBROUTINE "COMPFG"
    1 MAXC=MAXC+1
      RETURN
C
      ENTRY POWEL2 (A,B,AJINV,X,F,N,E,DSTEP,DMAX,ACC,MAXFUN,IS)
C     TEST FOR CONVERGENCE
      FSQ=DOT(F,F,N)
      IF (FSQ.GT.ACC) GO TO 4
C     PROVIDE OF FINAL SOLUTION IF REQUESTED
    3 WRITE (JOUT,7)
CGL 7 FORMAT(/',FINAL SOLUTION CALCULATED BY POWELL:')
    7 FORMAT(/' FINAL SOLUTION CALCULATED BY POWELL:')                  GL0592
      IPRIN=MAX(IPRIN,3)                                                DJG0995
      IS=6
      GO TO 100
C     TEST FOR ERROR RETURN BECAUSE F(X) DOES NOT DECREASE
    4 GO TO (10,11,11,10,11),IS
   10 IF (FSQ.LT.FMIN) GO TO 15
   20 IF (DD.GT.DSS) GO TO 11
   12 NTEST=NTEST-1
      IF (NTEST)13,14,11
   14 WRITE (JOUT,16) NT
      FAIL=.TRUE.
   16 FORMAT(///5X,'ERROR RETURN FROM POWELL BECAUSE ',I5,
     1' CALLS OF COMPFG FAILED TO IMPROVE THE RESIDUALS')
      ENTRY POWEL3 (A,B,AJINV,X,F,N,E)
   17 CALL SCOPY (N,W,1,X,1)
      CALL SCOPY (N,W(NF+1),1,F,1)
      FSQ=FMIN
      E=EMIN
      GO TO 3
C     ERROR RETURN BECAUSE A NEW JACOBIAN IS UNSUCCESSFUL
   13 WRITE (JOUT,19)
      FAIL=.TRUE.
   19 FORMAT(///5X,'ERROR RETURN FROM POWELL BECAUSE F(X)',
     1'FAILED TO DECREASE USING A NEW JACOBIAN')
      GO TO 17
   15 NTEST=NT
C     TEST WHETHER THERE HAVE BEEN MAXFUN CALLS OF COMPFG
   11 IF (MAXFUN.GT.MAXC) GO TO 22
   21 WRITE (JOUT,23) MAXC
      FAIL=.TRUE.
   23 FORMAT(///5X,'ERROR RETURN FROM POWELL BECAUSE ',                 GL0592
     1'THERE HAVE BEEN ',I5,' CALLS OF COMPFG')
      IF (FSQ-FMIN)3,17,17
C     PROVIDE PRINTING IF REQUESTED
   22 GO TO 100
C     STORE THE RESULT OF THE INITIAL CALL OF COMPFG
   30 FMIN=FSQ
      EMIN=E
      CALL SCOPY (N,X,1,W,1)
      CALL SCOPY (N,F,1,W(NF+1),1)
C     CALCULATE A NEW JACOBIAN APPROXIMATION
   32 IC=0
      IS=3
   33 IC=IC+1
      X(IC)=X(IC)+DSTEP
      GO TO 1
   29 DO 8 I=1,N
    8 AJINV(I,IC)=(F(I)-W(NF+I))/DSTEP
      X(IC)=W(IC)
      IF (IC.LT.N) GO TO 33
C SYMETRISE THE NEW JACOBIAN (WHICH IS AN HESSIAN)
      L=N-1
      DO 34 I=1,L
      K=I+1
CDIR$ IVDEP
      DO 34 J=K,N
      AJINV(I,J)=(AJINV(I,J)+AJINV(J,I))/2.D0
   34 AJINV(J,I)=AJINV(I,J)
      DO 35 I=1,NX
      B(I,1)=0.D0
   35 A(I,1)=AJINV(I,1)
C     CALCULATE THE INVERSE OF THE JACOBIAN AND SET THE DIRECTION MATRIX
      CALL INVERT (AJINV,N,K,VALU,EPS1)                                 DL0397
      WRITE(JOUT,260) MAXC,K
      JACOB=.TRUE.
      K=N+1
      DO 36 I=1,NX,K
   36 B(I,1)=1.D0
      DO 37 I=1,N
   37 W(NDC+I)=1.D0+DBLE(N-I)                                           GCL0393
  260 FORMAT (' THE HESSIAN AT THE ITERATION',I5,' IS OF INDEX',I4)
C     START ITERATION BY PREDICTING THE DESCENT AND NEWTON MINIMA
   38 DO 96 I=1,N
      X(I)=0.D0
   96 F(I)=0.D0
      DO 39 J=1,N
      WJ=W(NF+J)
      DO 39 I=1,N
      X(I)=X(I)-A(J,I)*WJ
   39 F(I)=F(I)-AJINV(I,J)*WJ
      DS=DOT(X,X,N)
      DN=DOT(F,F,N)
      SP=DOT(X,F,N)
C     TEST WHETHER A NEARBY STATIONARY POINT IS PREDICTED
      IF (FMIN*FMIN-DMM*DS)41,41,42
C     IF SO THEN RETURN OR REVISE JACOBIAN
   42 GO TO(43,43,44),IS
   44 WRITE(JOUT,45)
   45 FORMAT(///5X,'ERROR RETURN FROM POWELL BECAUSE A',
     1'NEARBY STATIONARY POINT OF F(X) IS PREDICTED')
      GO TO 17
   43 NTEST=0
      CALL SCOPY (N,W,1,X,1)
      GO TO 32
C     TEST WHETHER TO APPLY THE FULL NEWTON CORRECTION
   41 IS=2
      IF (DN.GT.DD) GO TO 48
   47 DD=MAX(DN,DSS)                                                    GCL0393
      DS=0.25D0*DN
      CHEMIN=NEWTON
      TINC=1.D0
      IF (DN.GE.DSS) GO TO 58
   49 IS=4
      GO TO 80
C     CALCULATE THE LENGTH OF THE STEEPEST DESCENT STEP
   48 DO 40 I=1,N
   40 VALU(I)=0.D0
      DO 52 J=1,N
      DO 52 I=1,N
   52 VALU(I)=VALU(I)+A(I,J)*X(J)
      DMULT=DOT(VALU,VALU,N)
      DMULT=DS/DMULT
      DS=DS*DMULT*DMULT
C     TEST WHETHER TO USE THE STEEPEST DESCENT DIRECTION
      IF (DS.LT.DD) GO TO 53
C     TEST WHETHER THE INITIAL VALUE OF DD HAS BEEN SET
   54 IF(DD.GT.0.D0) GO TO 56
   55 DD=MAX(DSS,MIN(DM,DS))                                            GCL0393
      DS=DS/(DMULT*DMULT)
      GO TO 41
C     SET THE MULTIPLIER OF THE STEEPEST DESCENT DIRECTION
   56 ANMULT=0.D0
      DMULT=DMULT*SQRT(DD/DS)                                           GCL0393
      CHEMIN=GRADIE
      GO TO 98
C     INTERPOLATE THE STEEPEST DESCENT AND THE NEWTON DIRECTIONS
   53 SP=SP*DMULT
      ANMULT=(DD-DS)/((SP-DS)+SQRT((SP-DD)**2+(DN-DD)*(DD-DS)))         GCL0393
      DMULT=DMULT*(1.D0-ANMULT)
      CHEMIN=HYBRID
C     CALCULATE THE CHANGE IN X AND ITS ANGLE WITH THE FIRST DIRECTION
   98 DO 57 I=1,N
   57 F(I)=DMULT*X(I)+ANMULT*F(I)
      DN=DOT(F,F,N)
      SP=DOT(F,B(1,1),N)
      DS=0.25D0*DN
C     TEST WHETHER AN EXTRA STEP IS NEEDED FOR INDEPENDENCE
      IF (W(NDC+1).LE.DTEST) GO TO 58
   59 IF(SP*SP-DS)60,58,58
C     TAKE THE EXTRA STEP AND UPDATE THE DIRECTION MATRIX
   50 IS=2
      CHEMIN=EXTRA
CDIR$ IVDEP
   60 DO 61 I=1,N
      VALU(I)=B(I,1)
      X(I)=W(I)+DSTEP*B(I,1)
   61 W(NDC+I)=W(NDC+I+1)+1.D0
      W(ND)=1.D0
      K=NX-N
      CALL SCOPY (K,B(N+1,1),1,B,1)
      CALL SCOPY (N,VALU,1,B(1,N),1)
      GO TO 1
C     EXPRESS THE DIRECTION IN TERMS OF THOSE OF THE DIRECTION MATRIX,
C     AND UPDATE THE COUNTS IN W(NDC+1) ETC.
   58 SP=0.D0
      DO 64 I=1,N
      X(I)=DW
      DW=DOT(F,B(1,I),N)
      GO TO (68,66),IS
   66 W(NDC+I)=W(NDC+I)+1.D0
      SP=SP+DW*DW
      IF (SP.LE.DS) GO TO 64
      IS=1
      KK=I
      X(1)=DW
      GO TO 69
   68 X(I)=DW
   69 W(NDC+I)=W(NDC+I+1)+1.D0
   64 CONTINUE
      W(ND)=1.D0
C     REORDER THE DIRECTIONS SO THAT KK IS FIRST
      IF (KK.LE.1)GO TO 70
      CALL SCOPY (N,B(1,KK),1,VALU,1)
      K=N*KK
      L=N+1
CDIR$ IVDEP
      DO 72 I=K,L,-1
   72 B(I,1)=B(I-N,1)
      CALL SCOPY (N,VALU,1,B,1)
C     GENERATE THE NEW ORTHOGONAL DIRECTION MATRIX
   70 DO 74 I=1,N
   74 W(NW+I)=0.D0
      SP=X(1)*X(1)
      DO 75 I=2,N
      DS=SQRT(SP*(SP+X(I)*X(I)))                                        GCL0393
      DW=SP/DS
      DS=X(I)/DS
      SP=SP+X(I)*X(I)
      I1=I-1
      DO 76 J=1,N
   76 W(NW+J)=W(NW+J)+X(I1)*B(J,I1)
      DO 75 J=1,N
   75 B(J,I1)=DW*B(J,I)-DS*W(NW+J)
      SP=1.D0/SQRT(DN)                                                  GCL0393
      DO 77 I=1,N
   77 B(I,N)=SP*F(I)
C     CALCULATE THE NEXT VECTOR X, AND PREDICT THE RIGHT HAND SIDES
CDIR$ IVDEP
   80 DO 78 I=1,N
      X(I)=W(I)+F(I)
   78 W(NW+I)=W(NF+I)
      DO 79 J=1,N
      DO 79 I=1,N
   79 W(NW+I)=W(NW+I)+A(I,J)*F(J)
      FNP=DOT(W(NW+1),W(NW+1),N)
C     CALL COMPFG USING THE NEW VECTOR OF VARIABLES
      GO TO 1
C     UPDATE THE STEP SIZE
   27 DMULT=0.9D0*FMIN+0.1D0*FNP-FSQ
      IF (DMULT.GE.0.D0) GO TO 81
   82 DD=MAX(DSS,0.25D0*DD)                                             GCL0393
      TINC=1.D0
      IF (FSQ-FMIN)83,28,28
C     TRY THE TEST TO DECIDE WHETHER TO INCREASE THE STEP LENGTH
   81 SP=0.D0
      DO 84 I=1,N
      SP=SP+ABS(F(I)*(F(I)-W(NW+I)))                                    GCL0393
   84 VALU(I)=F(I)-W(NW+I)
      SS=DOT(VALU,VALU,N)
      PJ=1.D0+DMULT/(SP+SQRT(SP*SP+DMULT*SS))                           GCL0393
      SP=MIN(4.D0,TINC,PJ)                                              GCL0393
      TINC=PJ/SP
      DD=MIN(DM,SP*DD)                                                  GCL0393
      GO TO 83
C     IF F(X) IMPROVES STORE THE NEW VALUE OF X
   87 IF (FSQ.GE.FMIN) GO TO 50
   83 FMIN=FSQ
      EMIN=E
CDIR$ IVDEP
      DO 88 I=1,N
      SP=X(I)
      X(I)=W(I)
      W(I)=SP
      SP=F(I)
      F(I)=W(NF+I)
      W(NF+I)=SP
   88 W(NW+I)=-W(NW+I)
      IF (IS.GT.1) GO TO 50
C     CALCULATE THE CHANGES IN F AND IN X
C     AND UPDATE THE APPROXIMATIONS TO J AND TO AJINV
CDIR$ IVDEP
   28 DO 90 I=1,N
      X(I)=X(I)-W(I)
      F(I)=F(I)-W(NF+I)
      VALU(I)=0.D0
      W(MW+I)=X(I)
   90 W(NW+I)=F(I)
      DO 91 J=1,N
CDIR$ IVDEP
      DO 91 I=1,N
      VALU(I)=VALU(I)+AJINV(J,I)*X(J)
      W(NW+I)=W(NW+I)-A(I,J)*X(J)
   91 W(MW+I)=W(MW+I)-AJINV(I,J)*F(J)
      SP=DOT(VALU,F,N)
      SS=DOT(X,X,N)
      CALL SCOPY (N,VALU,1,F,1)
      DMULT=1.D0
      IF (ABS(SP).GE.0.1D0*SS) GO TO 95                                 GCL0393
   94 DMULT=0.8D0
   95 PJ=DMULT/SS
      PA=DMULT/(DMULT*SP+(1.D0-DMULT)*SS)
      DO 97 I=1,N
      SP=PJ*W(NW+I)
      SS=PA*W(MW+I)
      DO 97 J=1,N
      A(I,J)=A(I,J)+SP*X(J)
   97 AJINV(I,J)=AJINV(I,J)+SS*F(J)
      GO TO 38
C     EDITING ON JOUT AND DISPATCHING ACCORDING TO IS
  100 IF (IPRIN.LE.0.OR.IS.EQ.3) GO TO 120                              DJG0995
      RMS=SQRT(FSQ/DBLE(N))                                             GCL0393
      SQRDD=SQRT(DD)                                                    GCL0393
      WRITE (JOUT,200) MAXC,E,FSQ,RMS,CHEMIN,SQRDD
      IF (IPRIN.LT.2) GO TO 120                                         DJG0995
      WRITE (JOUT,210) X
      IF (IS.NE.6) GO TO 115
      IF (JACOB) THEN
         DO 105 I=1,N
  105    W(I)=0.D0
         DO 110 J=1,N
         DO 110 I=1,N
  110    W(I)=W(I)-AJINV(I,J)*F(J)
         WRITE (JOUT,230)(W(I),I=1,N)
         L=N-1
         DO 112 I=1,L
         K=I+1
CDIR$ IVDEP
         DO 112 J=K,N
         AJINV(I,J)=(AJINV(I,J)+AJINV(J,I))/2.D0
  112    AJINV(J,I)=AJINV(I,J)
         CALL INVERT (AJINV,N,I,VALU,EPS1)                              DL0397
         WRITE (JOUT,250) I
      ENDIF
      WRITE (JOUT,220) F
      RETURN
  115 IF(IPRIN.GE.3) WRITE (JOUT,220) F                                 DJG0995
  120 GO TO (27,28,29,87,30),IS
      WRITE (JOUT,240) IS
      IS=6
      GO TO 100
C
  200 FORMAT(/' ITE',I4,3X,'ENERGY=',1PD13.5,2X,'<G!G>=',D15.8,
     1 2X,'RMS GRAD=',D15.8/11X,'CORRECTION OF ',A8,' TYPE',
     2 5X,'PREDICTED STEP LENGTH:',1PD11.3)
  210 FORMAT(' COORD  ',1P,6D12.4/(8X,6D12.4))
  220 FORMAT(' GRAD.  ',1P,6D12.4/(8X,6D12.4))
  230 FORMAT(' SQ.DEV.',1P,6D12.4/(8X,6D12.4))
  240 FORMAT(' ERROR ON ''IS'' VALUE IN POWELL...STOP.IS=',I5)
  250 FORMAT(' NUMBER OF NEGATIVE EIGENVALUE:',I3,' (ESTIMATE)')
      END
