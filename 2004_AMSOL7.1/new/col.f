      SUBROUTINE COL 
      IMPLICIT DOUBLE PRECISION (A-H,O-Z) 
       INCLUDE 'SIZES.i'
       INCLUDE 'KEYS.i'                                                 DJG0995
       INCLUDE 'FFILES.i'                                               GDH1095
C 
C 
C     TRANSITION STATE... CHAIN METHOD . 
C               PAU JULY 1978 
C     RELEASE 1.1  ...    OCTOBER 1979 
C             1.2         JUNE 1980 
C             1.3         JULY 1981 
C     RELEASE 2.0  ...    JANUARY 1984 (MAJOR CHANGE IN 'QUADRI') 
C             2.1         JANUARY 1986 
C---------- 
C 
C     LABORATOIRE DE CHIMIE STRUCTURALE 
C             UNIVERSITE DE PAU ET DES PAYS DE L'ADOUR 
C             AVENUE DE L'UNIVERSITE 
C                             64000  PAU  (FRANCE) 
C---------- 
C 
C     REFERENCE : D.LIOTARD  AND J.P.PENOT,IN : 
C         NUMERICAL METHODS IN THE STUDY OF CRITICAL PHENOMENA 
C         (J.DELLA DORA,J.DEMONGEOT,B.LACOLLE EDS) SPRINGER VERLAG 1981. 
C 
C---------- 
C 
C      MAXIMUM :MAXPAR OPTIMIZED VARIABLES 
C               NCHAIN POINTS ON THE CHAIN (CONFER VARIABLE NT). 
C 
C---------- 
C 
C     CALLS OF ENERGY ARE CONTROLED BY VARIABLE IS... 
C        IS=0 :    INITIALIZE SOME VARIABLES 
C           1 :    ENERGY OF THE APPROXIMATE SADDLE POINT 
C           2 :    ENERGY OF THE POINTS GENERATED ON THE INITIAL CHAIN 
C           3 :    ENERGY AND GRADIENT AT THE HIGHEST POINT (ITERATIVE) 
C           4 :    ENERGY OF THE CURRENT POINT DURING MONODIMENSIONAL 
C                  OPTIMIZATION (DOUBLY ITERATIVE) 
C           5 :    ENERGY AND ADDITIONAL GRADIENT FOR UPDATING 
C                  THE HESSIAN WHEN LINEAR INDEPENDANCE IS NOT SATISFIED 
C           6 :    UNUSED 
C           7 :    UNUSED 
C           8 :    ENERGY OF A POINT WHICH HAS BEEN INSERTED IN THE 
C                  CHAIN TO MAINTAIN THE LENGTH OF THE LINKS < DMAX . 
C                  (ITERATIVE) 
C           9 :    THE ALGORITHM STOPS (SEE THE LOGICAL VARIABLE FAIL) 
C 
C     ABSOLUTE ERROR ON ENERGY MUST BE < DELTAE 
C 
C---------- 
C 
C     KEY VARIABLES : 
C        N :       DIMENSION OF THE PROBLEM (NUMBER OF PARAMETERS). 
C        INDI(M,K) : POINT NUMBER M IS LOCATED ON CHAIN NUMBER K 
C                  ACCORDING TO THE FOLLOWING CODE : 
C                  K=1 : LEFT PART     K=2 : RIGHT PART. 
C                     AND FOR I = 1 TO N ... 
C                  LET MM=INDI(M,K), 
C        COORD(I,MM) : COORDINATES OF THE POINT NUMBER M . 
C        COORD(N+1,MM) : ENERGY OF THE POINT NUMBER M . 
C                  THE REACTANT (LEFT MINIMUM) IS THE FIRST POINT, 
C                  THE PRODUCT (RIGHT MINIMUM) IS THE LAST ONE . 
C                  THE HIGHEST POINT IS STORED SEPARATELY : 
C        HAUT(I),I=1,N : COORDINATES ; HAUT(N+1) : ENERGY ; 
C                  HAUT(N+2) : EUCLIDIAN NORM OF THE GRADIENT . 
C        X(I) :    COORDINATES OF THE CURRENT POINT THE ENERGY 
C                  OF WHICH IS REQUIRED . 
C        F,G(I) :  RETURN VALUES OF ENERGY AND GRADIENT . 
C        FAIL :    LOGICAL VARIABLE = .TRUE. IF SCF DIVERGENCE; 
C                  ON LEAVING SUBROUTINE "COL" : DIVERGENCE OF THE 
C                  ALGORITHM . 
C        IMP :     PRINTOUT CONTROL... 
C                  0 : NOTHING BUT ERROR MESSAGES . 
C                  1 : GENERAL MESSAGES ISSUED FROM THE PROGRAM . 
C                  1 TO 4 : CONFER SP 'BARAT'.(PRINTOUT AT EACH 
C                  ITERATION) 
C        H,GNEW,XNEW,GOLD,XOLD,EIGEN,XVAR,GVAR,HVEC : 
C                  SEE THE SUBROUTINE 'QUADRI'FOR QUADRATIC INFORMATION 
C                  TREATMENT . 
C 
C---------- 
C 
C     REQUIRED DATA : 
C        N :       NUMBER OF VARIABLES . 
C        COORD(I,1),I=1,N+1 : COORDINATES AND ENERGY OF THE REACTANT. 
C        COORD(I,NT),I=1,N+1 : IDEM FOR THE PRODUCT. 
C        LIMIT :   MAXIMUM NUMBER OF ITERATIONS . 
C        EPS :     CONVERGENCE THRESHOLD ON RMS GRADIENT . 
C        IMP :     PRINTOUT CONTROL . 
C        DMAX :    INITIAL MAXIMUM LENGTH OF A LINK. 
C        COSTET :  DISCRIMINATION ANGLE; (USUALLY 30 DEGREES) 
C        X(I),I=1,N: COORDINATES OF THE APPROXIMATE SADDLE POINT. 
C 
C        THE INITIAL CHAIN IS GENERATED FOLLOWING TWO STRAIGHT LINES: 
C                       LEFT                          RIGHT 
C        REACTANT--------P---------SADDLE POINT---------P-------PRODUCTS 
C        COORD(I,1)                    X(I)                  COORD(I,NT) 
C 
C---------- 
C 
C 
      COMMON /OPTIMI / IMP,IMP0                                         3GL3092
      COMMON /OPTMCI / ISTAB,IJUMP,IROTH,NVAR,ITEG,IBRCH,               3GL3092
     1                 INDI(NCHAIN,2),NP1,ITE,KK,JVOIS,ITEST,MM,        3GL3092
     2                 ITETOT,N,LIMIT,IS,NLR(2),NT                      3GL3092
      COMMON /OPTMCL / FAIL,MONO,FLAG,FLACHN(NCHAIN+1)                  GCL0892
      COMMON /OPTMCR / H(MAXHES),GNEW(MAXPAR),XNEW(MAXPAR),ENEW,        3GL3092
     1                GOLD(MAXPAR),XOLD(MAXPAR),EOLD,QDER,DMAX,         3GL3092
     2                COSDIR(MAXPAR,2),TRANS1(MAXPAR),HAUT(MAXPAR+2),   3GL3092
     3                DIR(MAXPAR),EIGEN(MAXPAR),R(2),EPS1,COSTET,Q,D,   3GL3092
     4                D1,D2,D3,D4,D5,D6,D7,D8,D9,CORREL,PIGI,GIGI,      3GL3092
     5                XVAR(MAXPAR,MAXPAR),GVAR(MAXPAR,MAXPAR),          3GL3092 
     6                HVEC(MAXPAR,4),THR1,THR2,COORD(MAXPAR+1,NCHAIN),  3GL3092 
     7                X(MAXPAR),F,G(MAXPAR),EPS,DELTAE,                 3GL3092 
     8                RDUMY(MAXPAR*MAXPAR)                              3GL3092
C     COMMON /OPTIM/ IMP,IMP0,LEC,IPRT,H(MAXHES),GNEW(MAXPAR) 
C    .              ,XNEW(MAXPAR),ENEW,GOLD(MAXPAR),XOLD(MAXPAR),EOLD 
C    .              ,QDER,DMAX,COSDIR(MAXPAR,2),TRANS1(MAXPAR) 
C    .              ,HAUT(MAXPAR+2),DIR(MAXPAR),EIGEN(MAXPAR),R(2),EPS1 
C    .              ,COSTET,Q,D,D1,D2,D3,D4,D5,D6,D7,D8,D9,CORREL,PIGI 
C    .              ,GIGI,XVAR(MAXPAR,MAXPAR),GVAR(MAXPAR,MAXPAR) 
C    .              ,HVEC(MAXPAR,4),THR1,THR2,COORD(MAXPAR+1,NCHAIN) 
C    .              ,X(MAXPAR),F,G(MAXPAR),EPS,DELTAE 
C    .              ,ISTAB,IJUMP,IROTH,NVAR,ITEG,IBRCH,INDI(NCHAIN,2) 
C    .              ,NP1,ITE,KK,JVOIS,ITEST,MM,ITETOT 
C    .              ,N,LIMIT,IS,NLR(2),NT,FAIL,MONO,FLAG,FLACHN(NCHAIN) 
      LOGICAL FAIL,MONO,FLAG,FLACHN 
      DIMENSION DPAS(4),DFON(4),P(MAXPAR,MAXPAR)                        GCL0393
      CHARACTER*6 BARAT(2)                                              GCL0393
      EQUIVALENCE (DPAS(1),D2),(DFON(1),D6) 
      SAVE
      DATA BARAT /'  LEFT',' RIGHT'/                                    GCL0393
C 
C... DISPATCHING ACCORDING TO IS 
      ITETOT=ITETOT+1 
      GO TO (9010,9020,9030,9040,9050,9060,9070,9080),IS 
C 
C        *****   SECTION 0   ***** 
C 
C     INITIALIZATION AND CONTROL 
      IF(IS.NE.0) GO TO 9999 
      ISTAB=0 
      NP1 = N+1 
      ITE = 0 
      ITETOT=0 
      ITEG=0 
      PIGI=0.D0 
      GIGI=0.D0 
      IBRCH=0 
      DO 30 I=1,NT 
   30 FLACHN(I)=.TRUE. 
      FLACHN(1)=.FALSE. 
      FLACHN(NT)=.FALSE. 
      NLR(1)=1 
      NLR(2)=1 
      DO 40 I=1,N 
   40 HAUT(I) = X(I) 
C     CONTROL THE CONSISTENCY OF THE MAXIMUM LENGTH 
      DMAX=ABS(DMAX)                                                    GCL0393
      IF (DMAX.EQ.0.D0) DMAX=1.D30 
      D1=0.D0 
      D2=0.D0 
      D3=0.D0 
      DO 60 I=1,N 
      D1 = D1+(COORD(I,1)-COORD(I,NT))**2 
      D2 = D2+(COORD(I,1)-HAUT(I))**2 
   60 D3 = D3+(COORD(I,NT)-HAUT(I))**2 
      DMAX = MIN(DMAX,SQRT(MIN(D1,D2,D3))/2.99D0) 
      D9=DMAX*1.D-1 
      COSTET=MOD(COSTET,90.D0)                                          GCL0393
      IF(COSTET.EQ.0.D0) COSTET=30.D0 
      WRITE (JOUT,2020) COSTET,DMAX,N,LIMIT,EPS,IIPRIN                  DJG0995
      COSTET=ABS(COS(COSTET*3.141692654D0/180.D0))                      GCL0393
      WRITE (JOUT,2000) 
      WRITE (JOUT,2010) (I,COORD(I,1),HAUT(I),COORD(I,NT),I=1,N) 
      IS = 1 
      RETURN 
C     ( ENERGY OF THE FIRST POINT ) 
 9010 CONTINUE 
      WRITE(JOUT,2015) COORD(NP1,1),F,COORD(NP1,NT) 
      IF(FAIL) GO TO 232 
      IF(F.LE.MAX(COORD(NP1,1),COORD(NP1,NT))) WRITE(JOUT,3070) F 
      HAUT(NP1)=F 
C     THE INITIAL CHAIN IS GENERATED 
      CALL VOISIN 
      JVOIS=0 
  110 JVOIS=JVOIS+1 
      IF(JVOIS.GT.2) GO TO 170 
      ITEST = IDINT (R(JVOIS)/DMAX) 
      IF (ITEST.EQ.0) GO TO 110 
      D8=R(JVOIS)/(ITEST+1) 
      KK = 0 
  120 KK=KK+1 
      IF (KK.GT.ITEST) GO TO 110 
      PAS=D8*(ITEST+1-KK) 
      DO 130 I=1,N 
  130 X(I) = HAUT(I) - COSDIR(I,JVOIS)*PAS 
      IS = 2 
      RETURN 
C     (ENERGY OF THE GENERATED POINT ) 
 9020 CONTINUE 
      IF(FAIL) GO TO 232 
      CALL RABIOT (X,F,N,BARAT) 
      IF (ISTOP.NE.0) RETURN                                            GDH1095
      IF(FAIL) GO TO 225 
      GO TO 120 
C 
C... BEGINNING OF ITERATIVE LOOP : LOOK OUT FOR SQUALLS.... 
C 
C        *****   SECTION 1   ***** 
C 
C     HIGHEST POINT RESEARCH AND COMPUTATION OF THE GRADIENT 
C     THE RETURNED COORDINATES ARE IN HAUT AND X 
C     ISTAB=1 IF THE HIGHEST POINT HAS NOT BEEN SHIFTED 
C          =0 OTHERWISE 
  170 CALL PTHAUT 
      ITE=ITE+1 
      ITEG=ITEG+1 
      IS = 3 
      RETURN 
C     ( ENERGY AND GRADIENT AT THE HIGHEST POINT ) 
 9030 CONTINUE 
      IBRCH=1 
      IF(.NOT.FAIL) GO TO 211 
      WRITE(JOUT,3090) ITE 
      GO TO 232 
C     NOTE ... THE ENERGY SHOULD BE TWICE THE SAME . IF NOT,THEN SOME 
C              TROUBLE HAS OCCURED IN SCF ITERATION. 
  211 IF(ABS(F-HAUT(NP1)).LE.DELTAE) GO TO 215                          GCL0393
      WRITE(JOUT,3050) HAUT(NP1),F,(X(I),I=1,N) 
      WRITE(JOUT,2060) 
      GO TO 231 
  215 HAUT(NP1) = F 
      ENEW=F 
      HAUT(N+2)=SQRT(DOT(G,G,N)) 
      RMS=HAUT(N+2)/SQRT(DBLE(N))                                       GCL0393
      DO 220 I=1,N 
      XNEW(I)=X(I) 
  220 GNEW(I) = G(I) 
      IF(F.LE.MAX(COORD(NP1,1),COORD(NP1,NT))) GO TO 233 
C 
C        *****   SECTION 2   ***** 
C 
C     TEST FOR CONVERGENCE ON RMS GRADIENT AND INDIVIDUAL COMPONENTS 
      IF (RMS.GT.EPS) GO TO 230 
      A=EPS*2.D0 
      DO 221 I=1,N 
  221 A=MAX(A,ABS(G(I))) 
      IF(A.GT.EPS*2.D0) GO TO 230 
C     ... VENI , VIDI , VINCIT . 
      WRITE (JOUT,2050) ITETOT,ITEG 
      IBRCH=0 
C     PRINTOUT AND EXIT 
  225 IS=9 
      IMP=IPRINT                                                        DJG0995
      IJUMP=2 
      FAIL=.TRUE. 
      CALL QUADR (XVAR,GVAR,P,N,NVAR) 
      FAIL=IBRCH.NE.0 
      CALL ECRIT(BARAT) 
      IMP=IIPRIN                                                        DJG0995 
      DO 226 I=1,N 
      X(I)=XNEW(I) 
  226 G(I)=GNEW(I) 
      F=ENEW 
      RETURN 
  230 IF(ITE.LE.LIMIT) GO TO 235 
C 
C     DIVERGENCE OR LOSS OF PRECISION : PROGRAM STOPS . 
      WRITE(JOUT,2040) LIMIT 
  231 FAIL=.TRUE. 
      GO TO 225 
  232 WRITE(JOUT,3080) 
      GO TO 225 
  233 WRITE(JOUT,3100) F 
      GO TO 231 
  234 WRITE(JOUT,2060) 
      GO TO 231 
C 
C     UPDATE QUADRATIC INFORMATION 
  235 MONO=ITE.LT.N.OR.Q.NE.0.D0 
      CALL QUADRI(XVAR,GVAR,P,N,NVAR) 
      IF(MONO) GO TO 237 
      ITEG=ITEG+1 
      IS=5 
      RETURN 
C      ( ENERGY AND GRADIENT  FOR HESSIAN ) 
 9050 CONTINUE 
      IF(FAIL) WRITE (JOUT,2110) 
      CALL QUADR(XVAR,GVAR,P,N,NVAR) 
C 
C     PRINTOUT AT EACH ITERATION (UNDER IMP CONTROL) 
  237 FAIL=.FALSE. 
      IF(IMP.GT.0) CALL ECRIT (BARAT) 
C 
C     ENSURE THAT DMAX IS NOT EXCEEDED 
C     DMAX CAN'T BE LOWER THAN A TENTH OF ITS INITIAL VALUE 
      IF(DMAX.LE.D9.OR.MOD(ITE,N).NE.0) GO TO 239 
      I=ITE/N 
      DMAX=DMAX*DBLE(I+5)/DBLE(I+6)                                     GCL0393
      IF(IMP.GT.0) WRITE(JOUT,2100) DMAX 
C 
C        *****   SECTION 3   ***** 
C 
C     SELECT THE DIRECTION OF HIGHEST POINT SHIFTING 
C     AT THE BEGINNING OF THIS SECTION THE QUADRATIC DIRECTION IS IN DIR 
  239 CALL VOISIN 
      JVOIS=1 
      IF(DOT(DIR,COSDIR(1,1),N).GT.DOT(DIR,COSDIR(1,2),N)) JVOIS=2 
      IF(Q.EQ.0.D0.OR.ISTAB.NE.1) GO TO 240 
C     DIR : QUADRATIC TERMINATION  (IBRCH=1) 
      D=Q 
      D1=QDER 
      IBRCH=1 
      IF(IMP.GT.0.AND.D1.GT.0.D0) WRITE(JOUT,2070) D1 
      IF(IMP.GT.0.AND.D1.LT.0.D0) WRITE(JOUT,2071) D1 
      GO TO 300 
C     WORK OUT TANGENTIAL GRADIENT:TRANS1,(NORM:GTNORM) 
  240 DO 250 I=1,N 
  250 TRANS1(I) = COSDIR(I,1) - COSDIR(I,2) 
      TNORM=SQRT(DOT(TRANS1,TRANS1,N)) 
      DO 260 I=1,N 
  260 TRANS1(I)=TRANS1(I)/TNORM 
      GTNORM=DOT(TRANS1,GNEW,N) 
      IF(ABS(GTNORM).GT.HAUT(N+2)*COSTET) GO TO 280                     GCL0393
      IF(Q.EQ.0.D0.OR.QDER.GT.0.D0) GO TO 270 
C     DIR : QUADRATIC DESCENT (IBRCH=2) 
      D=Q 
      D1=QDER 
      IBRCH=2 
      IF(IMP.GT.0) WRITE(JOUT,2072) D1 
      GO TO 300 
C     DIR : DESCENDING GRADIENT PERPENDICULAR TO THE PATH(IBRCH=3) 
  270 D=DMAX 
      IF(ITE.GT.4) D=MIN(D,MAX(CORREL*HAUT(N+2),D*3.D-4)) 
  273 DO 271 I=1,N 
  271 DIR(I)=TRANS1(I)*GTNORM-GNEW(I) 
      TNORM=SQRT(DOT(DIR,DIR,N)) 
      DO 272 I=1,N 
  272 DIR(I)=DIR(I)/TNORM 
      D1=DOT(DIR,GNEW,N) 
      IBRCH=3 
      IF(IMP.GT.0) WRITE(JOUT,2073) D1 
      GO TO 300 
  280 IF(Q.EQ.0.D0.OR.QDER.LT.0.D0) GO TO 290 
C     DIR : QUADRATIC ASCENT  (IBRCH=4) 
      D=MIN(Q,MAX(R(JVOIS), DMAX*0.1D0)) 
      D1=QDER 
      IBRCH=4 
      IF(IMP.GT.0) WRITE(JOUT,2074)BARAT(JVOIS),D1 
      GO TO 300 
  290 JVOIS=0 
      D1=HAUT(N+2)*0.17D0 
      DO 291 K=1,2 
      TNORM=-DOT(GNEW,COSDIR(1,K),N) 
      IF(TNORM.LT.D1) GO TO 291 
      D1=TNORM 
      JVOIS=K 
  291 CONTINUE 
      IF(JVOIS.EQ.0) GO TO 293 
C     DIR : TOWARDS THE MOST ASCENDING NEIGHBOUR (IBRCH=5) 
      DO 292 I=1,N 
  292 DIR(I)=-COSDIR(I,JVOIS) 
      D=-D1*(R(JVOIS)**2)/(2.D0*(COORD(NP1,INDI(NLR(JVOIS),JVOIS)) 
     $  -HAUT(NP1)-D1*R(JVOIS))) 
      IBRCH=5 
      IF(IMP.GT.0) WRITE(JOUT,2075) BARAT(JVOIS),D1 
      GO TO 300 
  293 D=(R(1)+R(2))/2.D0 
      IF(ABS(GTNORM).GE.HAUT(N+2)*0.17D0) GO TO 273                     GCL0393
C     DIR : MIDDLE OF THE NEIGHBOURS(NO OPTIMIZED RESEARCH),(IBRCH=6) 
      DO 294 I=1,N 
  294 DIR(I)=COSDIR(I,1)+COSDIR(I,2) 
      TNORM=-SQRT(DOT(DIR,DIR,N)) 
      DO 295 I=1,N 
  295 DIR(I)=DIR(I)/TNORM 
      IBRCH=6 
      IF(IMP.GT.0) WRITE(JOUT,2076) 
C     END OF SELECTION. 
C NORMALIZED DIRECTION : DIR. STEP 1 OF LENGTH : D. SLOPE : D1 
C 
C        *****   SECTION 4   ***** 
C 
C     MONODIMENSIONAL OPTIMIZATION ALONG THE DIRECTION DIR 
  300 KK=0 
      MONO=.FALSE. 
  301 KK=KK+1 
      IF(KK.LT.5) GO TO 302 
      KK=4 
      IF (MONO.OR.DPAS(KK).LT.DMAX*2.D-4) GO TO 320 
      D=DMAX*1D-4 
      IMP=MAX(IMP,2)                                                    GCL0393
  302 DO 303 I=1,N 
  303 X(I)=HAUT(I)+D*DIR(I) 
      IS=4 
      RETURN 
C      ( F : ENERGY OF THE POINT CORRESPONDING TO STEP D ) 
 9040 CONTINUE 
      IF(.NOT.FAIL) GO TO 305 
      WRITE(JOUT,2080) ITE,D 
      IF(D.LE.DMAX*1.D-4) GO TO 232 
      IMP=MAX(IMP,2)                                                    GCL0393
      KK=KK-1 
      D=D/10.D0 
      GO TO 301 
  305 IF(IMP.GT.1) WRITE(JOUT,3020) KK,D,F 
      IF(IBRCH.EQ.6) GO TO 820 
      IF (.NOT.MONO.AND.D1*(F-HAUT(NP1)).GT.0.D0) MONO=.TRUE. 
      DPAS(KK)=D 
      DFON(KK)=F 
      A=(F-HAUT(NP1)-D1*D)/(D**2) 
      D=DMAX 
      IF(A *D1.LT.-1.D-30) D=-D1/(A*2.D0) 
      THR=20.D0 
      IF (MONO) THR=3.D0 
      D=MAX(DPAS(KK)/THR,DMAX*5.D-4,MIN(DMAX,DPAS(KK)*5.D0,D)) 
      IF(IBRCH.GE.4) D=MIN(D,R(JVOIS)) 
      IF (.NOT.MONO) GO TO 301 
      THR=0.05D0*KK 
      DO 312 I=1,KK 
      IF(ABS((D-DPAS(I))/(D+DPAS(I))).LE.THR) GO TO 320                 GCL0393
  312 CONTINUE 
      GO TO 301 
C     THE BEST TRIAL IS KEPT . 
  320 F=HAUT(NP1) 
      IF (MONO) GO TO 321 
      D=0.D0 
      GO TO 323 
  321 DO 322 I=1,KK 
      IF(D1*(DFON(I)-F).LT.0.D0) GO TO 322 
      D=DPAS(I) 
      F=DFON(I) 
  322 CONTINUE 
  323 DO 324 I=1,N 
  324 X(I)=HAUT(I)+D*DIR(I) 
      IF (.NOT.MONO) GO TO 234 
      IMP=IMP0 
C     END OF MONODIMENSIONAL RESEARCH . SELECTED POINT . 
C     STEP : D   COORDINATES : X   ENERGY : F 
C 
C        *****   SECTION 5   ***** 
C 
C     IN CASE OF ASCENDING INTERPOLATION THE PREVIOUS HIGHEST POINT 
C     MAY BE KEPT (TO AVOID AN EXPENSIVE INSERTION ) 
  820 IF(IBRCH.NE.4.OR.IBRCH.NE.5) GO TO 825 
      JVOIS=3-JVOIS 
      K=INDI(NLR(JVOIS),JVOIS) 
      DO 821 I=1,N 
  821 TRANS1(I)=X(I)-COORD(I,K) 
      GTNORM=SQRT(DOT(TRANS1,TRANS1,N)) 
      IF(GTNORM.LT.DMAX) GO TO 825 
      CALL RABIOT (HAUT,HAUT(NP1),N,BARAT) 
      IF (ISTOP.NE.0) RETURN                                            GDH1095
      IF(FAIL) GO TO 225 
  825 HAUT(NP1) = F 
      DO 830 I=1,N 
  830 HAUT(I) = X(I) 
      IF(IBRCH.NE.3) GO TO 840 
C 
C     UPDATE THE STEP LENGTH STATISTICAL ESTIMATE 
      PIGI=PIGI+D *HAUT(N+2) 
      GIGI=GIGI+HAUT(N+2)**2 
      CORREL=1.1D0*PIGI/GIGI 
C 
C 
C     POSSIBLE SMOOTHING AND INSERTION 
  840 CALL VOISIN 
      JVOIS=0 
C     D2 IS THE RADIUS OF THE CUT BALL 
      D2=MIN(MAX(R(1),R(2),DMAX*1.D-1),DMAX) 
  845 JVOIS=JVOIS+1 
      IF(JVOIS.GT.2) GO TO 170 
      IF(NLR(JVOIS).EQ.1) GO TO 865 
C     ELIMINATION 
      KFIN=NLR(JVOIS)-1 
      DO 860 K=1,KFIN 
      L=INDI(K,JVOIS) 
      DO 850 I=1,N 
  850 X(I)=HAUT(I)-COORD(I,L) 
      XNORM=DOT(X,X,N) 
      IF(SQRT(XNORM).LE.D2) GO TO 851 
      IF(K.EQ.1) GO TO 856 
      SCAL=DOT(X,G,N) 
      IF((SCAL-GNORM)*(XNORM-SCAL).GE.0.D0)  GO TO 856 
      IF(SQRT((GNORM*XNORM-SCAL**2)/(GNORM+XNORM-2.D0*SCAL)).GT.D2) 
     1                          GO TO 856 
      KCOUP=K-1 
      GO TO 852 
  851 KCOUP=K 
      IF(K.NE.1.AND.SQRT(XNORM).LE.DMAX*1.D-1) KCOUP=KCOUP-1 
  852 KP1=KCOUP+1 
      IF(IMP.GT.0) WRITE(JOUT,3060) BARAT(JVOIS),KP1,NLR(JVOIS) 
      DO 855 I=KP1,NLR(JVOIS) 
  855 FLACHN(INDI(I,JVOIS))=.TRUE. 
      NLR(JVOIS)=KCOUP 
      CALL VOISIN 
      GO TO 865 
  856 GNORM=XNORM 
      DO 860 I=1,N 
  860 G(I)=X(I) 
C     INSERTION 
  865 IF(R(JVOIS).LE.DMAX) GO TO 845 
      PAS=R(JVOIS)/2.D0 
      DO 870 I=1,N 
  870 X(I) = HAUT(I) - COSDIR(I,JVOIS)*PAS 
      IS = 8 
      RETURN 
C     ( ENERGY OF THE GENERATED NEIGHBOUR ) 
 9080 CONTINUE 
      IF(.NOT.FAIL) GO TO 875 
      WRITE(JOUT,3110) ITE,BARAT(JVOIS) 
      GO TO 845 
  875 CALL RABIOT (X,F,N,BARAT) 
      IF (ISTOP.NE.0) RETURN                                            GDH1095
      IF(FAIL) GO TO 225 
      GO TO 845 
C 
C 
C     RETURNED BRANCHES ACTUALLY UNUSED 
 9060 CONTINUE 
 9070 CONTINUE 
 9999 WRITE(JOUT,2090) IS 
      GO TO 231 
C 
C 
 2000 FORMAT('0COORDINATES OF MINIMA AND IMPOSED POINT:'/, 
     $'   N      LEFT MINI   INTERMEDIATE   RIGHT MINI'/) 
 2010 FORMAT(I5,3F14.6) 
 2015 FORMAT(/' ENERGY',1P,3D14.4/) 
 2020 FORMAT('1SADDLE POINT RESEARCH... CHAIN METHOD'/ 
     . 9X,'DISCRIMINATION ANGLE:',F5.1,' DEGREES',7X, 
     . 'MAXIMUM LINK LENGTH:',F6.3/ 
     .9X,'DIMENSION:',I3,5X,'MAX.ITERATION:',I4/ 
     .9X,'RMS GRAD CV THRESHOLD:',1PD8.1,10X,'PRINTOUT LEVEL =',I3) 
 2040 FORMAT(' STOP ... ITERATION >',I5,' IN ''CHAIN'' METHOD') 
 2050 FORMAT('0CONVERGENCE ACHIEVED AFTER ',I5,' CALLS OF ENERGY',I4, 
     .' OF WHICH WITH GRADIENT') 
 2060 FORMAT(/' *** LOSS OF PRECISION ON ENERGY OR GRADIENT : STOP ***') 
 2070 FORMAT(' ASCENDING QUADRATIC TERMINATION   SLOPE:',1PD12.3) 
 2071 FORMAT(' DESCENDING QUADRATIC TERMINATION   SLOPE:',1PD12.3) 
 2072 FORMAT(' QUADRATIC DESCENT   SLOPE:',1PD12.3) 
 2073 FORMAT(' DESCENT BY PROJECTED GRADIENT   SLOPE:',1PD12.3) 
 2074 FORMAT(' QUADRATIC ASCENT ON THE',A6,3X,'SLOPE:',1PD12.3) 
 2075 FORMAT(' UP TO NEIGHBOUR ON THE',A6,3X,'SLOPE:',1PD12.3) 
 2076 FORMAT(' BISSECTOR IMPOSED') 
 2080 FORMAT(' ITERATION',I5,' MONODIMENSIONAL RESEARCH. STEP:',F12.8,' 
     .ENERGY DIVERGENCE') 
 2090 FORMAT(' ABNORMAL RETURN... IS =',I2,' STOP') 
 2100 FORMAT(' MAXIMUM DISTANCE REDUCED TO :',F7.4) 
 2110 FORMAT(' WARNING : ENERGY DIVERGENCE FOR EXTRA POINT (HESSIAN)') 
 3020 FORMAT(I4,'  STEP :',F12.8,'   ENERGY :',F12.8) 
 3050 FORMAT(' UNRELIABLE ENERGY AT HIGHEST POINT...E OLD=', 
     . 1P,D13.6,'  E NEW=',D13.6/ 
     .' PROBABLE CROSSING OF STATES. THE CORRESPONDING GEOMETRY IS :' 
     . ,0P/(8F10.5)) 
 3060 FORMAT(' ELIMINATION ON THE',A6,'  FROM',I3,' TO',I3) 
 3070 FORMAT(' WARNING : THE INTERMEDIATE POINT (',1P,D13.6, 
     .' ) IS LOWER THAN A MINIMUM') 
 3080 FORMAT(10X,'DIVERGENCE OF ENERGY ... STOP') 
 3090 FORMAT(' ITERATION',I5,' ENERGY AT HIGHEST POINT IS EVALUATED') 
 3100 FORMAT(' THE SADDLE POINT (',1PD13.6,' ) IS LOWER THAN REACTANTS.. 
     ....STOP') 
 3110 FORMAT(' WARNING : ENERGY DIVERGENCE AT ITERATION',I5,' NON INSERT 
     .ION ON THE',A6) 
      END 
